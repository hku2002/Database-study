version: '3'

services:

  mysql-master:
    image: mysql
    container_name: mysql-master
    hostname: mysql-master
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    restart: always
    networks:
      - docker-net
    volumes:
      - /Users/hwang/DataRepo/mysql-replication/master/data:/var/lib/mysql
      - /Users/hwang/DataRepo/mysql-replication/master/config:/etc/mysql/conf.d
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 2048M

  mysql-replica-01:
    image: mysql
    container_name: mysql-replica-01
    hostname: mysql-replica-01
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    restart: always
    networks:
      - docker-net
    volumes:
      - /Users/hwang/DataRepo/mysql-replication/replica-01/data:/var/lib/mysql
      - /Users/hwang/DataRepo/mysql-replication/replica-01/config:/etc/mysql/conf.d
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 2048M

  mysql-master-exporter:
    image: prom/mysqld-exporter
    container_name: mysql-master-exporter
    hostname: mysql-master-exporter
    environment:
      DATA_SOURCE_NAME: root:1234@tcp(mysql-master:3306)/
    restart: unless-stopped
    command:
      - "--mysqld.username=root:1234"
      - "--mysqld.address=mysql-master:3306"
    ports:
      - "9104:9104"
    networks:
      - docker-net
    depends_on:
      - mysql-master
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

  mysql-replica-01-exporter:
    image: prom/mysqld-exporter
    container_name: mysql-replica-01-exporter
    hostname: mysql-replica-01-exporter
    environment:
      DATA_SOURCE_NAME: root:1234@tcp(mysql-replica-01:3306)/
    command:
      - "--mysqld.username=root:1234"
      - "--mysqld.address=mysql-replica-01:3306"
    ports:
      - "9105:9104"
    networks:
      - docker-net
    depends_on:
      - mysql-replica-01
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

  grafana:
    image: grafana/grafana:10.3.7
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    restart: unless-stopped
    networks:
      - docker-net
    volumes:
      - /Users/hwang/DataRepo/grafana/files/grafana.ini:/etc/grafana/grafana.ini
      - /Users/hwang/DataRepo/grafana/data:/var/lib/grafana
    logging:
      driver: "json-file"
      options:
        max-size: "8m"
        max-file: "10"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    restart: always
    networks:
      - docker-net
    volumes:
      - /Users/hwang/DataRepo/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

networks:
  docker-net:
    name: docker-net
